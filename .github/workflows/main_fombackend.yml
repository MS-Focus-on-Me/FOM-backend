# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - fombackend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Azure AI 테스트 (선택사항)
      - name: Test Azure AI Connection
        run: |
          source venv/bin/activate
          python -c "
          try:
              from azure.ai.projects import AIProjectClient
              from azure.identity import DefaultAzureCredential
              print('✅ Azure AI dependencies installed successfully')
          except ImportError as e:
              print(f'⚠️ Azure AI import warning: {e}')
          "
        continue-on-error: true

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Clean up and prepare for deployment
        run: |
          # 불필요한 파일들 제거
          rm -rf venv
          rm -rf .git
          rm -rf __pycache__
          find . -name "*.pyc" -delete
          find . -name "*.pyo" -delete

      - name: Zip artifact for deployment
        run: zip -r release.zip . -x "venv/*" ".git/*" "*.pyc" "__pycache__/*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1F36E8D705B447EC913C82CB35235211 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B584720549844F0BAB0866B6FF1662ED }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_FE0973349A79459A8867022707661CF3 }}

      # 배포 전 잠시 대기 (SCM 컨테이너 안정화)
      - name: Wait for SCM container stability
        run: sleep 30

      - name: Set Database URL
        run: |
          az webapp config appsettings set \
            --name fombackend \
            --resource-group 6ai-team06 \
            --settings DATABASE_URL="${{ secrets.DATABASE_URL }}"

      # Azure AI 관련 환경변수 설정
      - name: Set Azure AI Environment Variables
        run: |
          az webapp config appsettings set \
            --name fombackend \
            --resource-group 6ai-team06 \
            --settings \
              AZURE_CLIENT_ID="${{ secrets.AZUREAPPSERVICE_CLIENTID_1F36E8D705B447EC913C82CB35235211 }}" \
              AZURE_TENANT_ID="${{ secrets.AZUREAPPSERVICE_TENANTID_B584720549844F0BAB0866B6FF1662ED }}" \
              AZURE_CLIENT_SECRET="${{ secrets.AZURE_CLIENT_SECRET }}"
        continue-on-error: true

      # 배포 전 추가 대기
      - name: Wait before deployment
        run: sleep 15

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: "fombackend"
          slot-name: "Production"
          package: "."

      # 배포 후 Azure AI 연결 테스트 (선택사항)
      - name: Test Azure AI Connection After Deployment
        run: |
          echo "Testing Azure AI connection..."
          curl -f "${{ steps.deploy-to-webapp.outputs.webapp-url }}/health" || echo "Health check endpoint not available"
        continue-on-error: true
